{"version":3,"file":"static/js/609.62ade667.chunk.js","mappings":"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","sources":["icons/chevronleft.svg","pages/movieDetails/MovieDetails.styled.js","pages/movieDetails/MovieDetails.jsx","utils/fetchApi.jsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgChevronleft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"arrow-thin-left\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.828 9l6.071-6.071-1.414-1.414-8.485 8.485 8.485 8.485 1.414-1.414-6.071-6.071h16.172v-2h-16.172z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronleft);\nexport default __webpack_public_path__ + \"static/media/chevronleft.e3824bdc797126a811a38f112eaff895.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\r\n\r\nexport const StyledMovieDetails = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 40px;\r\n  padding-bottom: 20px;\r\n  border-bottom: 2px solid lightgray;\r\n  .poster {\r\n    width: 28%;\r\n    height: 100%;\r\n  }\r\n  .movieInfo {\r\n    width: 70%;\r\n  }\r\n  .wrap {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 20px;\r\n  }\r\n  .movieTitle {\r\n    font-size: 40px;\r\n    margin-bottom: 25px;\r\n  }\r\n  .subtitle {\r\n    font-size: 24px;\r\n    margin-bottom: 10px;\r\n  }\r\n  .text {\r\n    font-size: 18px;\r\n    margin-bottom: 15px;\r\n  }\r\n  .linkWrap {\r\n    display: flex;\r\n    gap: 20px;\r\n  }\r\n  .goBack {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n    min-width: 180px;\r\n    height: 40px;\r\n    padding: 8px 16px;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    color: black;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    background-color: white;\r\n    border: 1px solid black;\r\n    outline: none;\r\n    border-radius: 10px;\r\n    :hover,\r\n    :focus {\r\n      color: white;\r\n      fill: white;\r\n      background-color: darkslategray;\r\n      border: none;\r\n      border-bottom: 4px solid greenyellow;\r\n    }\r\n  }\r\n  .link {\r\n    display: block;\r\n    padding: 8px 16px;\r\n    border-radius: 10px;\r\n    font-size: 18px;\r\n    text-decoration: none;\r\n    color: black;\r\n    font-weight: 500;\r\n\r\n    :hover,\r\n    :focus,\r\n    :active {\r\n      color: white;\r\n      background-color: darkslategray;\r\n      border-bottom: 4px solid greenyellow;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledNotify = styled.div`\r\ndisplay: flex;\r\ngap: 40px;\r\njustify-content: center;\r\nalign-items: center;\r\nmargin-top: 50px;\r\nfont-size: 30px;\r\n`","import { Suspense, useEffect, useState } from 'react';\r\nimport { Link, Outlet, useNavigate, useParams } from 'react-router-dom';\r\nimport { fetchMovie } from '../../utils/fetchApi';\r\nimport Loader from '../../components/Loader';\r\nimport { StyledMovieDetails, StyledNotify } from './MovieDetails.styled';\r\nimport { ReactComponent as ArrowLeft } from '../../icons/chevronleft.svg';\r\nimport sadFrog from '../../images/sadFrog.png';\r\nimport defaultPoster from '../../images/NoImageAvailable.jpg';\r\n\r\nconst baseURL = 'https://image.tmdb.org/t/p/original';\r\n\r\nexport default function MovieDetails() {\r\n  const [movie, setMovie] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const { movieId } = useParams('');\r\n  const navigate = useNavigate()\r\n  const { poster_path, title, vote_average, overview, genres, release_date = 'unknown' } =\r\n    movie;\r\n\r\n  useEffect(() => {\r\n    if (movieId === '') { return }\r\n    setLoading(true);\r\n    fetchMovie(movieId)\r\n      .then(response => setMovie(response.data))\r\n      .catch(error => console.log('promise error'))\r\n      .finally(() => setLoading(false));\r\n    \r\n  }, [movieId]);\r\n  return (\r\n    <>\r\n      {movie !== '' && (\r\n        <StyledMovieDetails>\r\n          <img\r\n            className=\"poster\"\r\n            src={poster_path ? baseURL + poster_path : defaultPoster}\r\n            alt={title}\r\n            width=\"300\"\r\n            height=\"450\"\r\n          />\r\n          <div className=\"movieInfo\">\r\n            <div className=\"wrap\">\r\n              <h1 className=\"movieTitle\">{title}</h1>\r\n              <Link onClick={() => navigate(-1)} className=\"goBack\">\r\n                <ArrowLeft height=\"20\" />\r\n                <span>Go back</span>\r\n              </Link>\r\n            </div>\r\n            <p className=\"text\">\r\n              Release:\r\n              <span> {release_date.slice(0, 4)}</span>\r\n            </p>\r\n            <p className=\"text\">\r\n              User score:\r\n              <span> {Math.round(vote_average * 10)}%</span>\r\n            </p>\r\n            <h2 className=\"subtitle\">Overview</h2>\r\n            <p className=\"text\">{overview}</p>\r\n            <h3 className=\"subtitle\">Genres</h3>\r\n            <p className=\"text\">\r\n              {genres && genres.map(item => item.name).join(' ')}\r\n            </p>\r\n            <h3 className=\"subtitle\">Additional information</h3>\r\n            <div className=\"linkWrap\">\r\n              <Link to=\"cast\" replace className=\"link\">\r\n                Cast\r\n              </Link>\r\n              <Link to=\"reviews\" replace className=\"link\">\r\n                Reviews\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </StyledMovieDetails>\r\n      )}\r\n      {!loading && movie === '' && (\r\n        <StyledNotify>\r\n          <img src={sadFrog} alt=\"sad frog\" width=\"100\" />\r\n          <span>We don't have any information about this movie</span>\r\n        </StyledNotify>\r\n      )}\r\n      <Suspense fallback={<Loader />}>\r\n        <Outlet />\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n","// import PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = 'e47912c9c86a85e39c0250f9b01ed0f5';\r\n\r\nexport const fetchTrending = async () => {\r\n  const trending = await axios\r\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`)\r\n\r\n  return trending;\r\n};\r\n\r\nexport const fetchQuery = async (query) => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${apiKey}`\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const fetchMovie = async (id) => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const fetchCast = async (id) => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const fetchReviews = async id => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}`\r\n  );\r\n  return response;\r\n};"],"names":["_path","StyledMovieDetails","styled","StyledNotify","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgChevronleft","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","undefined","id","d","ForwardRef","MovieDetails","useState","movie","setMovie","loading","setLoading","movieId","useParams","navigate","useNavigate","poster_path","vote_average","overview","genres","release_date","useEffect","fetchMovie","then","response","data","catch","error","console","log","finally","className","src","defaultPoster","alt","onClick","slice","Math","round","map","item","name","join","to","replace","sadFrog","Suspense","fallback","Loader","apiKey","fetchTrending","axios","trending","fetchQuery","query","fetchCast","fetchReviews"],"sourceRoot":""}