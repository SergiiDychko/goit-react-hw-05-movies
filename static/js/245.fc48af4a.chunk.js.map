{"version":3,"file":"static/js/245.fc48af4a.chunk.js","mappings":"sNAEaA,EAAaC,EAAAA,GAAAA,GAAS,mK,2BCAtBC,EAAiBD,EAAAA,GAAAA,GAAS,6O,SCCxB,SAASE,EAAS,GAA8B,IAA5BC,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAAMC,EAAS,EAATA,UAC/C,OACE,UAACJ,EAAc,YACb,gBAAKK,UAAU,QAAQC,IAAW,OAANJ,QAAM,IAANA,EAAAA,E,8vOAAsBK,IAAKJ,EAAMK,MAAM,KAAKC,OAAO,SAC/E,eAAIJ,UAAU,OAAM,SAAEF,KACtB,cAAGE,UAAU,YAAW,SAAED,MAGhC,C,aCFe,SAASM,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACpB,GAA8BF,EAAAA,EAAAA,WAAS,GAAM,eAAtCG,EAAO,KAAEC,EAAU,KAClBC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OARAE,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXI,EAAAA,EAAAA,GAAUH,GACPI,MAAK,SAAAC,GAAQ,OAAIR,EAAQQ,EAASC,KAAKV,KAAK,IAC5CW,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,uBAAuB,IAClDC,SAAQ,kBAAMZ,GAAW,EAAM,GACpC,GAAG,CAACC,KAGF,gCACGF,IAAW,SAACc,EAAA,EAAM,KACnB,UAAC9B,EAAU,WACQ,IAAhBc,EAAKiB,QACJjB,EAAKkB,KAAI,gBAAGC,EAAY,EAAZA,aAAcC,EAAa,EAAbA,cAAe5B,EAAS,EAATA,UAAW6B,EAAE,EAAFA,GAAE,OACpD,SAAChC,EAAQ,CAEPC,OAAQ6B,EAtBN,sCAsB+BA,EAAe,KAChD5B,KAAM6B,EACN5B,UAAWA,GAHN6B,EAIL,KAEJnB,GAA2B,IAAhBF,EAAKiB,SAChB,yBACE,cAAGxB,UAAU,SAAQ,uEAQjC,C,qLCzCM6B,EAAS,mCAEFC,EAAa,yCAAG,yGACJC,EAAAA,EAAAA,IAChB,yDAAD,OAA0DF,IAAS,OAD3D,OAARG,EAAQ,yBAGPA,GAAQ,2CAChB,kBALyB,mCAObC,EAAU,yCAAG,WAAOC,GAAK,4FACbH,EAAAA,EAAAA,IAAU,mDAAD,OACqBG,EAAK,oBAAYL,IACpE,KAAD,EAFa,OAARb,EAAQ,yBAGPA,GAAQ,2CAChB,gBALsB,sCAOVmB,EAAU,yCAAG,WAAOP,GAAE,4FACVG,EAAAA,EAAAA,IAAU,sCAAD,OACQH,EAAE,oBAAYC,IACpD,KAAD,EAFa,OAARb,EAAQ,yBAGPA,GAAQ,2CAChB,gBALsB,sCAOVF,EAAS,yCAAG,WAAOc,GAAE,4FACTG,EAAAA,EAAAA,IAAU,sCAAD,OACQH,EAAE,4BAAoBC,IAC5D,KAAD,EAFa,OAARb,EAAQ,yBAGPA,GAAQ,2CAChB,gBALqB,sCAOToB,EAAY,yCAAG,WAAMR,GAAE,4FACXG,EAAAA,EAAAA,IAAU,sCAAD,OACQH,EAAE,4BAAoBC,IAC5D,KAAD,EAFa,OAARb,EAAQ,yBAGPA,GAAQ,2CAChB,gBALwB,qC","sources":["components/Cast/Cast.styles.js","components/Cast/CastItem/CastItem.styled.js","components/Cast/CastItem/CastItem.jsx","components/Cast/Cast.jsx","utils/fetchApi.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledCast = styled.ul`\r\n  display: flex;\r\n  gap: 30px;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 30px;\r\n  .notify {\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCastItem = styled.li`\r\n  width: 100px;\r\n\r\n  .photo {\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n  }\r\n  .name {\r\n    font-size: 16px;\r\n    margin-bottom: 10px;\r\n  }\r\n  .character {\r\n    font-size: 14px;\r\n    margin-bottom: 10px;\r\n  }\r\n`;","import { StyledCastItem } from './CastItem.styled';\r\nimport profilePic from '../../../images/ProfileDefaultImg.jpg';\r\n\r\nexport default function CastItem({ imgSrc, name, character }) {\r\n  return (\r\n    <StyledCastItem>\r\n      <img className=\"photo\" src={imgSrc ?? profilePic} alt={name} width=\"75\" height=\"100\" />\r\n      <h3 className=\"name\">{name}</h3>\r\n      <p className=\"character\">{character}</p>\r\n    </StyledCastItem>\r\n  );\r\n}\r\n","import { StyledCast } from './Cast.styles';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchCast } from '../../utils/fetchApi';\r\nimport CastItem from './CastItem';\r\nimport Loader from '../Loader';\r\n\r\nconst baseURL = 'https://image.tmdb.org/t/p/original';\r\n\r\nexport default function Cast() {\r\n  const [cast, setCast] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const { movieId } = useParams();\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchCast(movieId)\r\n      .then(response => setCast(response.data.cast))\r\n      .catch(error => console.log('Something went wrong'))\r\n      .finally(() => setLoading(false));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <StyledCast>\r\n        {cast.length !== 0 &&\r\n          cast.map(({ profile_path, original_name, character, id }) => (\r\n            <CastItem\r\n              key={id}\r\n              imgSrc={profile_path ? baseURL + profile_path : null}\r\n              name={original_name}\r\n              character={character}\r\n            />\r\n          ))}\r\n        {!loading && cast.length === 0 && (\r\n          <li>\r\n            <p className=\"notify\">\r\n              We don't have any cast information for this movie.\r\n            </p>\r\n          </li>\r\n        )}\r\n      </StyledCast>\r\n    </>\r\n  );\r\n}","// import PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = 'e47912c9c86a85e39c0250f9b01ed0f5';\r\n\r\nexport const fetchTrending = async () => {\r\n  const trending = await axios\r\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`)\r\n\r\n  return trending;\r\n};\r\n\r\nexport const fetchQuery = async (query) => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${apiKey}`\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const fetchMovie = async (id) => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const fetchCast = async (id) => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const fetchReviews = async id => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}`\r\n  );\r\n  return response;\r\n};"],"names":["StyledCast","styled","StyledCastItem","CastItem","imgSrc","name","character","className","src","alt","width","height","Cast","useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","fetchCast","then","response","data","catch","error","console","log","finally","Loader","length","map","profile_path","original_name","id","apiKey","fetchTrending","axios","trending","fetchQuery","query","fetchMovie","fetchReviews"],"sourceRoot":""}