{"version":3,"file":"static/js/415.404ef271.chunk.js","mappings":"kMAEaA,EAAaC,EAAAA,GAAAA,GAAS,0gB,kCCGpB,SAASC,EAAY,GAKhC,IAJFC,EAAE,EAAFA,GACAC,EAAM,EAANA,OAAO,EAAD,EACNC,MAAAA,OAAK,MAAG,eAAc,MACtBC,KAAAA,OAAI,MAAG,iBAAgB,EAEjBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACR,EAAU,WACT,UAAC,KAAI,CACHS,UAAU,OACVC,GAAE,kBAAaP,GACfQ,MAAO,CAAEC,KAAML,GAAW,WAE1B,gBACEE,UAAU,SACVI,IAAKT,EAnBC,sCAmBkBA,EAASU,EACjCC,IAAKV,EACLW,MAAM,MACNC,OAAO,SAET,eAAIR,UAAU,QAAO,SAAEJ,KACvB,cAAGI,UAAU,WAAU,SAAEH,QAIjC,CC9BO,IAAMY,EAAcjB,EAAAA,GAAAA,GAAS,mEAKvBkB,EAAalB,EAAAA,GAAAA,GAAS,6HCJpB,SAASmB,EAAY,GAAqB,IAAnBf,EAAK,EAALA,MAAOgB,EAAO,EAAPA,QACzC,OACE,iCACE,SAACH,EAAW,UAAEb,KACd,SAACc,EAAU,UACRE,GAAWA,EAAQC,KAAI,gBAAGnB,EAAE,EAAFA,GAAIE,EAAK,EAALA,MAAOkB,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SAAQ,OAC/D,SAACvB,EAAW,CAEVC,GAAIA,EACJC,OAAQoB,EACRnB,MAAOA,GAASkB,EAChBjB,KAAMmB,GAJDtB,EAKL,QAMd,C,6HChBe,SAASuB,IACtB,OAA4CC,EAAAA,EAAAA,UAAS,IAAG,eAAjDC,EAAc,KAAEC,EAAiB,KACxC,GAA8BF,EAAAA,EAAAA,WAAS,GAAM,eAAtCG,EAAO,KAAEC,EAAU,KAQxB,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GAAQ,OAAIN,EAAkBM,EAASC,KAAKC,QAAQ,IACzDC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,uBAAuB,IAClDC,SAAQ,kBAAMX,GAAW,EAAM,GACpC,GAAG,KAED,4BACGD,IAAW,SAAC,IAAM,KACnB,SAAC,IAAW,CAACzB,MAAM,iBAAiBgB,QAASO,MAGrD,C,qLClBMe,EAAS,mCAEFV,EAAa,yCAAG,yGACJW,EAAAA,EAAAA,IAChB,yDAAD,OAA0DD,IAAS,OAD3D,OAARR,EAAQ,yBAGPA,GAAQ,2CAChB,kBALyB,mCAObU,EAAU,yCAAG,WAAOC,GAAK,4FACbF,EAAAA,EAAAA,IAAU,mDAAD,OACqBE,EAAK,oBAAYH,IACpE,KAAD,EAFa,OAARI,EAAQ,yBAGPA,GAAQ,2CAChB,gBALsB,sCAOVC,EAAU,yCAAG,WAAO7C,GAAE,4FACVyC,EAAAA,EAAAA,IAAU,sCAAD,OACQzC,EAAE,oBAAYwC,IACpD,KAAD,EAFa,OAARI,EAAQ,yBAGPA,GAAQ,2CAChB,gBALsB,sCAOVE,EAAS,yCAAG,WAAO9C,GAAE,4FACTyC,EAAAA,EAAAA,IAAU,sCAAD,OACQzC,EAAE,4BAAoBwC,IAC5D,KAAD,EAFa,OAARI,EAAQ,yBAGPA,GAAQ,2CAChB,gBALqB,sCAOTG,EAAY,yCAAG,WAAM/C,GAAE,4FACXyC,EAAAA,EAAAA,IAAU,sCAAD,OACQzC,EAAE,4BAAoBwC,IAC5D,KAAD,EAFa,OAARI,EAAQ,yBAGPA,GAAQ,2CAChB,gBALwB,qC","sources":["components/GalleryList/GalleryItem/GalleryItem.styled.js","components/GalleryList/GalleryItem/GalleryItem.jsx","components/GalleryList/GalleryList.styled.js","components/GalleryList/GalleryList.jsx","pages/Home.jsx","utils/fetchApi.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledItem = styled.li`\r\n  width: 200px;\r\n  height: 500px;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  border-radius: 10px;\r\n  padding-bottom: 10px;\r\n\r\n  .poster {\r\n    width: 100%;\r\n  }\r\n  .title {\r\n    padding: 10px;\r\n    font-size: 18px;\r\n  }\r\n  .overview {\r\n    font-size: 14px;\r\n    padding: 0 10px;\r\n  }\r\n  .link {\r\n    text-decoration: none;\r\n    color: black;\r\n    :hover,\r\n    :focus {\r\n      color: white;\r\n    }\r\n  }\r\n  :hover,\r\n  :focus {\r\n    background-color: darkslategray;\r\n  }\r\n`;","import { StyledItem } from './GalleryItem.styled';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport defaultPoster from '../../../images/NoImageAvailable.jpg';\r\nconst baseURL = 'https://image.tmdb.org/t/p/original';\r\n\r\nexport default function GalleryItem({\r\n  id,\r\n  imgSrc,\r\n  title = 'unknown name',\r\n  text = 'no description',\r\n}) {\r\n  const location = useLocation()\r\n  \r\n  return (\r\n    <StyledItem>\r\n      <Link\r\n        className=\"link\"\r\n        to={`/movies/${id}`}\r\n        state={{ from: location }}\r\n      >\r\n        <img\r\n          className=\"poster\"\r\n          src={imgSrc ? baseURL + imgSrc : defaultPoster}\r\n          alt={title}\r\n          width=\"150\"\r\n          height=\"200\"\r\n        />\r\n        <h2 className=\"title\">{title}</h2>\r\n        <p className=\"overview\">{text}</p>\r\n      </Link>\r\n    </StyledItem>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledTitle = styled.h1`\r\nmargin: 20px 0 40px;\r\ntext-align: center;\r\n`;\r\n\r\nexport const StyledList = styled.ul`\r\ndisplay: flex;\r\ngap: 30px;\r\nflex-wrap: wrap;\r\njustify-content: space-evenly;\r\npadding-bottom: 30px;\r\n`","import GalleryItem from './GalleryItem';\r\nimport { StyledTitle, StyledList } from './GalleryList.styled';\r\n\r\nexport default function GalleryList({ title, gallery }) {\r\n    return (\r\n      <>\r\n        <StyledTitle>{title}</StyledTitle>\r\n        <StyledList>\r\n          {gallery && gallery.map(({ id, title, name, poster_path, overview }) => (\r\n            <GalleryItem\r\n              key={id}\r\n              id={id}\r\n              imgSrc={poster_path}\r\n              title={title || name}\r\n              text={overview}\r\n            />\r\n          ))}\r\n        </StyledList>\r\n      </>\r\n    );\r\n\r\n}","import { useEffect, useState } from \"react\"\r\nimport GalleryList from \"../components/GalleryList\"\r\nimport { fetchTrending } from \"../utils/fetchApi\"\r\nimport Loader from '../components/Loader';\r\n\r\nexport default function Home() {\r\n  const [trendingMovies, setTrendingMovies] = useState([])\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      fetchTrending()\r\n        .then(trending => setTrendingMovies(trending.data.results))\r\n        .catch(error => console.log('Something went wrong'))\r\n        .finally(() => setLoading(false));\r\n    }, []);\r\n    return (\r\n      <main>\r\n        {loading && <Loader />}\r\n        <GalleryList title=\"Trending today\" gallery={trendingMovies} />\r\n      </main>\r\n    );\r\n}","// import PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = 'e47912c9c86a85e39c0250f9b01ed0f5';\r\n\r\nexport const fetchTrending = async () => {\r\n  const trending = await axios\r\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`)\r\n\r\n  return trending;\r\n};\r\n\r\nexport const fetchQuery = async (query) => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${apiKey}`\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const fetchMovie = async (id) => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const fetchCast = async (id) => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const fetchReviews = async id => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}`\r\n  );\r\n  return response;\r\n};"],"names":["StyledItem","styled","GalleryItem","id","imgSrc","title","text","location","useLocation","className","to","state","from","src","defaultPoster","alt","width","height","StyledTitle","StyledList","GalleryList","gallery","map","name","poster_path","overview","Home","useState","trendingMovies","setTrendingMovies","loading","setLoading","useEffect","fetchTrending","then","trending","data","results","catch","error","console","log","finally","apiKey","axios","fetchQuery","query","response","fetchMovie","fetchCast","fetchReviews"],"sourceRoot":""}